#!/bin/bash

##### USEFUL FUNCTIONS #####

print_result() {
	if (( $2 == "OK")) ; then
		TICK="✓"
	else
		TICK="⨯"
	fi
    echo "$1:  $3  $TICK"
}

print_average_min_max() {
	let "average = $1 / $2"
	echo ""
	echo "Average: ${average}"
	echo "Min: ${min}"
	echo "Max: ${max}"
}

deal_min() {
	if (( $1 == 1 )) ; then
		min=$2
	elif (( $2 < min)) ; then
		min=$2
	fi
}

deal_max() {
	if (( $1 == 1 )) ; then
		max=$2
	elif (( max < $2 )) ; then
		max=$2
	fi
}

check_if_arg_is_int() {
	re='^[0-9]+$'

	if [[ ! $1 =~ $re ]] ; then
		echo "The arguments have to be integers."
		exit 1
	fi
}

check_args() {
	if (( $1 != 2 )) ; then
		echo "Usage : ./test_perso.sh stack_size number_of_tests"
		exit 1 
	fi

	check_if_arg_is_int $2
	check_if_arg_is_int $3

	if (( $2 <= 0 || $3 <= 0)) ; then
		echo "The arguments have to be > 0."
		exit 1
	fi
}



##### CHECKS #####

# Check if push_swap exists
if [[ ! -f ./push_swap ]] ; then
	echo "Can't find push_swap."
	exit 1
fi

# Check if checker exists
if [[ ! -f ./checker ]] ; then
	echo "Can't find checker."
	exit 1
fi

# Check the presence and the validity of the arguments
check_args $# $1 $2



##### ACTUAL TEST #####

let "total = 0"

for (( i=1 ; i<=$2 ; i++ )) ;
do
	# Generate a new set of random numbers
	ARG=`ruby -e "puts (-9999..9999).to_a.sort{ rand() - 0.5 }[0..($1 - 1)].join(' ') "`

	# Call the push_swap program with the set of numbers as the parameter
	PS_RESULT="`./push_swap $ARG`"

	# Check if push_swap returned 0
	if (( $? != 0 )) ; then
		echo "Error. Test has been stopped."
		exit 1
	fi

	# Get the number of lines of the result generated by push_swap and add it to the total
	RESULT="`echo ${PS_RESULT} | tr " " "\n" | wc -l | bc`"
	let "total += RESULT"

	# "OK" or "KO"
	CHECKER_RESULT="`echo ${PS_RESULT} | ./checker $ARG`"

	deal_min $i $RESULT
	deal_max $i $RESULT

	# Check if the list of instructions generated by push_swap sorts $ARG well
	print_result $i $CHECKER_RESULT $RESULT
done

print_average_min_max $total $2
